/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.example.demo.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.example.demo.util.SimpleFormDataPair;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SimpleFormDataPair_SSTest extends SimpleFormDataPair_SSTest_scaffolding {
// allCoveredLines:[5, 10]

  @Test(timeout = 4000)
  public void test_equals_0()  throws Throwable  {
      //caseID:07e8deb7255eb8b4b692e010f9b7d83b
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_Object: simpleFormDataPair0
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals(simpleFormDataPair0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      //caseID:287e619dd576d283a606ba84b2706b25
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_Object: SimpleFormDataPair(type=
      //Assert: assertFalse(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals("SimpleFormDataPair(type=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      //caseID:bb1abd3b596655d2adf0cc2842a85586
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Input_0_Object: simpleFormDataPair0
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      SimpleFormDataPair simpleFormDataPair1 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair1.equals(simpleFormDataPair0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      //caseID:9f35a83b2da625d5a5c561f8f470b6d7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Input_0_Object: simpleFormDataPair1
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      SimpleFormDataPair simpleFormDataPair1 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals(simpleFormDataPair1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:47a6874e39899495ea8d8a6cb7352cbf
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: hashCode
      simpleFormDataPair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setType_5()  throws Throwable  {
      //caseID:054578f88ae2d4977aef0645b87252ef
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_String: 1\u0000
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: setType
      simpleFormDataPair0.setType("1\u0000");
      
      //Test Result Assert
      assertEquals("1\u0000", simpleFormDataPair0.getType());
  }

  @Test(timeout = 4000)
  public void test_toString_6()  throws Throwable  {
      //caseID:f45412554b9866e796b175d345268078
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Assert: assertEquals("SimpleFormDataPair(type=null)", method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: toString
      String string0 = simpleFormDataPair0.toString();
      
      //Test Result Assert
      assertEquals("SimpleFormDataPair(type=null)", string0);
  }
}
