/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.example.demo.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.example.demo.util.SimpleFormDataPair;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SimpleFormDataPair_SSTest extends SimpleFormDataPair_SSTest_scaffolding {
// allCoveredLines:[5, 10]

  @Test(timeout = 4000)
  public void test_equals_0()  throws Throwable  {
      //caseID:cb2397d3e25aa66c9dde28dc128ab1c7
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_Object: simpleFormDataPair0
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals(simpleFormDataPair0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      //caseID:a1eb3a2c7b344ac6e6b25baf6b78f63e
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_Object: f=NG]O@I9JkDxh{A<
      //Assert: assertFalse(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals("f=NG]O@I9JkDxh{A<");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      //caseID:ceaea5607b5283bff82cb3ed2b084d4b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Input_0_Object: simpleFormDataPair0
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      SimpleFormDataPair simpleFormDataPair1 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair1.equals(simpleFormDataPair0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      //caseID:6e3a03075e94660187558ba7e7c5d7b3
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Input_0_Object: simpleFormDataPair1
      //Assert: assertTrue(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      SimpleFormDataPair simpleFormDataPair1 = new SimpleFormDataPair();
      
      //Call method: equals
      boolean boolean0 = simpleFormDataPair0.equals(simpleFormDataPair1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test_getType_4()  throws Throwable  {
      //caseID:2ee3f1ed9fa40707dd04864fbb6ca4d7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Assert: assertNull(method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: getType
      String string0 = simpleFormDataPair0.getType();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_hashCode_5()  throws Throwable  {
      //caseID:bce25a42b033ee8f01688b54f9bbd160
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: hashCode
      simpleFormDataPair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test_setType_6()  throws Throwable  {
      //caseID:fab1b44717ad0e6ff9b680e3288612df
      //CoveredLines: [5, 5, 5, 5, 5, 5]
      //Input_0_String: 1^gO$iu!>Y!
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: setType
      simpleFormDataPair0.setType("1^gO$iu!>Y!");
      
      //Test Result Assert
      assertEquals("1^gO$iu!>Y!", simpleFormDataPair0.getType());
  }

  @Test(timeout = 4000)
  public void test_toString_7()  throws Throwable  {
      //caseID:87025945128e23ee2943fb63c05b62b8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 10]
      //Assert: assertEquals("SimpleFormDataPair(type=null)", method_result);
      
      SimpleFormDataPair simpleFormDataPair0 = new SimpleFormDataPair();
      
      //Call method: toString
      String string0 = simpleFormDataPair0.toString();
      
      //Test Result Assert
      assertEquals("SimpleFormDataPair(type=null)", string0);
  }
}
