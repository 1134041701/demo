/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.example.demo.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.example.demo.service.ServiceDemo;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ServiceDemo_SSTest extends ServiceDemo_SSTest_scaffolding {
// allCoveredLines:[5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 26, 27, 28, 30, 31]

  @Test(timeout = 4000)
  public void test_ifElseMethod_0()  throws Throwable  {
      //caseID:f5bc8666ecab171e3ec4d0da44dadae4
      //CoveredLines: [5, 8, 23]
      //Input_0_Integer: null
      //Assert: assertNull(method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod((Integer) null);
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_ifElseMethod_1()  throws Throwable  {
      //caseID:cf9e50c17d5819692b280cf2507d8216
      //CoveredLines: [5, 8, 9, 10, 11]
      //Input_0_Integer: 1
      //Assert: assertNotNull(method_result);
      //Assert: assertEquals("juvenile", method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      Integer integer0 = new Integer(1);
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod(integer0);
      
      //Test Result Assert
      assertNotNull(string0);
      
      //Test Result Assert
      assertEquals("juvenile", string0);
  }

  @Test(timeout = 4000)
  public void test_ifElseMethod_2()  throws Throwable  {
      //caseID:1390c77411af61610128d50c98140fef
      //CoveredLines: [5, 8, 9, 12, 13, 14]
      //Input_0_Integer: 25
      //Assert: assertNotNull(method_result);
      //Assert: assertEquals("youth", method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      Integer integer0 = new Integer(25);
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod(integer0);
      
      //Test Result Assert
      assertNotNull(string0);
      
      //Test Result Assert
      assertEquals("youth", string0);
  }

  @Test(timeout = 4000)
  public void test_ifElseMethod_3()  throws Throwable  {
      //caseID:698091f6956c443df9bcee9c20523a65
      //CoveredLines: [5, 8, 9, 12, 15, 19, 20]
      //Input_0_Integer: 443
      //Assert: assertEquals("error", method_result);
      //Assert: assertNotNull(method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      Integer integer0 = new Integer(443);
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod(integer0);
      
      //Test Result Assert
      assertEquals("error", string0);
      
      //Test Result Assert
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test_ifElseMethod_4()  throws Throwable  {
      //caseID:5e9a3f0f7d88f9b183bf7472e7317827
      //CoveredLines: [5, 8, 9, 12, 15, 19, 20]
      //Input_0_Integer: 0
      //Assert: assertEquals("error", method_result);
      //Assert: assertNotNull(method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      Integer integer0 = new Integer(0);
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod(integer0);
      
      //Test Result Assert
      assertEquals("error", string0);
      
      //Test Result Assert
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test_ifElseMethod_5()  throws Throwable  {
      //caseID:d44442068a79ede5fd5e8f83b5608ddc
      //CoveredLines: [5, 8, 9, 12, 15, 16, 17]
      //Input_0_Integer: 90
      //Assert: assertEquals("middle-aged", method_result);
      //Assert: assertNotNull(method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      Integer integer0 = new Integer(90);
      
      //Call method: ifElseMethod
      String string0 = serviceDemo0.ifElseMethod(integer0);
      
      //Test Result Assert
      assertEquals("middle-aged", string0);
      
      //Test Result Assert
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test_whileMethod_6()  throws Throwable  {
      //caseID:64e275eff6402f184b71b28b62884f1e
      //CoveredLines: [5, 26, 27, 28]
      //Input_0_List<String>: linkedList0
      //Assert: assertNotNull(method_result);
      //Assert: assertEquals("hello", method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      linkedList0.add("hello");
      
      //Call method: whileMethod
      String string0 = serviceDemo0.whileMethod(linkedList0);
      
      //Test Result Assert
      assertNotNull(string0);
      
      //Test Result Assert
      assertEquals("hello", string0);
  }

  @Test(timeout = 4000)
  public void test_whileMethod_7()  throws Throwable  {
      //caseID:23538acc5aaf8d1aaa2a30e24b98a318
      //CoveredLines: [5, 26, 27, 30, 31]
      //Input_0_List<String>: linkedList0
      //Assert: assertNull(method_result);
      
      ServiceDemo serviceDemo0 = new ServiceDemo();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      linkedList0.add("middle-aged");
      
      //Call method: whileMethod
      String string0 = serviceDemo0.whileMethod(linkedList0);
      
      //Test Result Assert
      assertNull(string0);
  }
}
